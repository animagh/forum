პროექტი დაყოფილია 5 ნაწილად:
დომეინში არის ძირითადი მოდულები, რომელსაც მთლიანი პროექტი იყენებს.
გვაქვს Topic, Comment, User, Role, UserRole მოდელები.
User-ს აქვს one-to-many რელაცია Topic-თან და Comment-თან, ხოლო many-to-many რელაცია Role-თან UserRole-ის საერთო მოდულის გამოყენებით.
 პროექტში Infrastructure ლეიერში, მონაცემთა ბაზასთან დასაკავშირებლად არის ApplicationDbContext რომელიც არის IdentityDbContext ის მემკვიდრე კლასი.
შექმნილია 3 რეპოზიტორი Topic, Comment და User მოდელებისთვის, ამ რეპოზიტორიებს ვიყენებ Service-ებში,
სადაც აწყობილია აპლიკაციის ლოგიკა მონაცემთა დასამუშავებლად კონტროლერებისთვის,
ეს სერვისები იყენებენ ასევე აუტომაპერს, რომელიც  დაკონფიგურირებულია Application ლეიერში რათა დავაკავშირო DTO-ები და მოდელები, 
სერვისები ასევე იყენებენ GlobalExceptionHandler middleware-ის ექსეფშენებს, ხოლო ამ სერვისებს საბოლოოდ ვიყენებ Controller-ებში, 
ყველაფერი დეპენდენსი ინჯექშენით დამატებულია ცალკე extension კლასით WebApi პროექტში, ამავე პროექტში არის დამატებული მიგრაციების ფოლდერი. 
ასევე Infrastructure ლეირში არის SeedData, აუთენთიკაცია და ავტორიზაცია გაკეთებულია Indetity-ით და JWT ტოკენით, 
კონფიგურაციის მიხედვით User-ის მეილი უნდა იყოს უნიკალური და პაროლი არაა აუცილებელი შეიცავდეს განსაკუთრებულ სიმბოლოს. 
დამატებულია TokenGenerator სერვისი, რომელიც გადაცემულ User-ის მონაცემებზე ქმნის და აბრუნებს jwt ტოკენს რომელიც ვალიდურია 7 დღე.
 შეიცავს იუზერის ids, username-ს, და mail-ს, ასევე როლს.
 აპლიკაციაში დამატებულია ერთი background სერვისიც რომელიც ამოწმებს ყველა აქტიურ topics და თუ მათი შექმნიდან 7 დღე გავიდა Inactivad უკეთებს სტატუს.